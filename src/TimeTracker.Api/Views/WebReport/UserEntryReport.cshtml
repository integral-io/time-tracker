@using TimeTracker.Data.Models
@model TimeTracker.Api.Models.UserRecordHoursViewModel

@{
    ViewBag.Title = "Time Entry Report";
    Layout = "_Layout";
}

<h2>@Model.Name: @ViewBag.Title</h2>

<form class="well" asp-action="RecordHours" method="post">
    <div class="form-row">
        <div class="col">
            <input type="date" name="Date" class="form-control" value="@Model.Date.ToString("yyyy-MM-dd")" />
        </div>
        <div class="col">
            @Html.DropDownListFor(m=> m.TimeEntryType, 
                Html.GetEnumSelectList(typeof(TimeEntryTypeEnum)), 
                htmlAttributes: new { onChange = "selectTimeEntry(this);", @class = "custom-select" })
            
            @* <select class="custom-select" name="TimeEntryType" onChange="selectTimeEntry(this);"> *@
            @*     <option value="0">Billable</option> *@
            @*     <option value="1">Non-billable</option> *@
            @*     <option value="2">Sick</option> *@
            @*     <option value="3">Vacation</option> *@
            @* </select> *@
        </div>
        <div class="col" id="projectColumn">
            @Html.DropDownListFor(m=> m.ProjectId, Model.Projects.Select(x=> new SelectListItem(x.Name, x.ProjectId.ToString())), 
                htmlAttributes: new { @class = "custom-select"} )
            @* <select class="custom-select" name="ProjectId"> *@
            @*     <option>Au</option> *@
            @*     <option>May</option> *@
            @*     <option>Bosch</option> *@
            @* </select> *@
        </div>
        <div class="col" id="nonbillColumn">
            <input type="text" name="NonbillReason" class="form-control" placeholder="non billable reason" maxlength="30"/>
        </div>
        <div class="col">
            <input type="text" name="Hours" class="form-control" placeholder="Hours" maxlength="2" min="0" max="12">
        </div>
        <div class="col">
            <button type="submit" class="btn btn-primary my-1">Record</button>
        </div>
    </div>
</form>
<table class="table table-striped table-bordered">
    <thead class="thead-dark">
    <tr>
        <th scope="col">Date</th>
        <th scope="col">Billable Hours</th>
        <th scope="col">Sick Hours</th>
        <th scope="col">Vacation Hours</th>
        <th scope="col">Other Non Billable Hours</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var user in Model.Hours)
    {
        <tr>
            <td>@user.Date  @user.DayOfWeek</td>
            <td>@user.BillableHours @user.BillableProject</td>
            <td>@user.SickHours @user.SickReason</td>
            <td>@user.VacationHours @user.VacationReason</td>
            <td>@user.OtherNonBillable @user.NonBillableReason</td>
        </tr>
    }
    </tbody>
</table>
@section scripts
{
    <script>

        function selectTimeEntry(event) {

            const projectColumn = document.getElementById("projectColumn");
            const nonbillColumn = document.getElementById("nonbillColumn");

            if (event.selectedIndex == 0) {
                projectColumn.style.display = "block";
                nonbillColumn.style.display = "none";
            } else {
                projectColumn.style.display = "none";
                nonbillColumn.style.display = "block";
            }
        }

        function getValueFromSelect(selectName, selectedIndex) {
            const value = document.getElementsByName(selectName).options[selectedIndex].value;
            return value;
        }

        selectTimeEntry({ selectedIndex : 0 });
    </script>
}